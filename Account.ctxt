#BlueJ class context
comment0.target=Account
comment0.text=\r\n\ An\ account\ with\ money.\r\n\r\n\ @author\ (Ryan\ Deisler\ &\ Akmal\ Muminov)\r\n\ @version\ (2/20/18)\r\n
comment1.params=theName\ theID\ theBalance
comment1.target=Account(java.lang.String,\ java.lang.String,\ Money)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Account\r\n
comment10.params=o
comment10.target=int\ compareTo(java.lang.Object)
comment10.text=\r\n\ compareTo\:\ compare\ two\ Account\ objects.\r\n\ Precondition\:\ parameter\ o\ is\ an\ Object\ (of\ type\ Account)\r\n\ Postcondition\:\ return\ 0\ if\ this.id\ is\ the\ same\ as\ o.id,\ -1\ if\ this.id\ <\ o.id,\ 1\ if\ this.id\ >\ o.id.\r\n
comment11.params=
comment11.target=char\ getType()
comment2.params=original
comment2.target=Account(Account)
comment2.text=\r\n\ Copy\ constructor\ for\ objects\ of\ class\ Account\r\n
comment3.params=theDeposit
comment3.target=void\ deposit(Money)
comment3.text=\r\n\ deposit\:\ Increases\ the\ Money\ balance\ by\ the\ amount,\ theDeposit\r\n\r\n\ @param\ \ a\ Money,\ theDeposit\r\n\ @return\ \ \ \ void\r\n\ \r\n\ Precondition\:\ This\ account\ object\ and\ the\ Money\ theDeposit\ are\ both\ valid\r\n\ \r\n\ Postcondition\:\ The\ account's\ balance\ increases\ by\ theDeposit\ amount\r\n\ The\ calling\ object\ is\ changed\ while\ the\ parameter\ is\ not.\r\n
comment4.params=theWithdrawal
comment4.target=void\ withdraw(Money)
comment4.text=\r\n\ withdraw\:\ Decreases\ the\ Money\ balance\ by\ the\ amount,\ theWithdrawal\r\n\r\n\ @param\ \ a\ Money,\ theWithdrawal\r\n\ @return\ \ \ \ void\r\n\ \r\n\ Precondition\:\ This\ account\ object\ and\ the\ Money\ theWithdrawal\ are\ both\ valid\r\n\ \r\n\ Postcondition\:\ The\ account's\ balance\ decreases\ by\ theWithdrawal\ amount\r\n\ The\ calling\ object\ is\ changed\ while\ the\ parameter\ is\ not.\r\n
comment5.params=j\ a
comment5.target=void\ transfer(Account,\ Money)
comment5.text=\r\n\ Transfers\ money\ from\ the\ account\ invoking\ the\ method\ to\ the\ parameter\ account\r\n\ @param\:\ Account\ object\ j\r\n\ @param\:\ Money\ object\ a\r\n\ \r\n\ Precondition\:\ This\ account/\ Account\ j\ and\ Money\ a\ objects\ are\ valid\r\n\ Postcondition\:\ Transfers\ an\ amount\ of\ Money\ a,\ to\ Account\ j\ from\ this\ Account\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ toString\ \r\n\ @return\ a\ String\ representation\ of\ this\ object\r\n\ Precondition\:\ this\ Account\ object\ is\ valid\r\n\ Postcondition\:\ String\ object\ is\ returned\ that\ can\ be\ printed\r\n
comment7.params=j
comment7.target=boolean\ equals(Account)
comment7.text=\r\n\ equals\:\ determines\ if\ two\ Account\ objects\ are\ equal\r\n\ \r\n\ @return\ a\ boolean,\ true\ if\ calling\ object\ is\ the\ same\ as\ parameter\ object\r\n\ @param\ Account\ j\ object\r\n\ \r\n\ Precondition\:\ Both\ Account\ objects\ are\ valid\r\n\ Postcondition\:\ A\ boolean\ is\ returned\r\n
comment8.params=
comment8.target=java.lang.String\ getID()
comment8.text=\r\n\ \r\n\ getID\:\ what\ it\ sounds\ like\r\n
comment9.params=
comment9.target=Money\ getBalance()
comment9.text=\r\n\ \r\n\ getBalance\:\ what\ it\ sounds\ like\r\n
numComments=12
